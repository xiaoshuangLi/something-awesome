@import "frontend/css/func.scss";

$bg: "~img/ed.jpeg";
$list: ('grayscale', 'sepia', 'saturate', 'hue-rotate', 'invert', 'opacity', 'brightness', 'contrast', 'blur', 'drop-shadow');
$total: length($list);

@mixin filter($attr){
	filter: $attr;
	-webkit-filter: $attr;
}

@mixin special($class, $attr) {
	&.#{$class}{
		.img{
			&:nth-child(2) {
				@include filter($attr);
			}
		}
	}
}

.page-svg-filter-render{
	background: #efefef; 
	min-height: 100vh;
	padding: 4.54%;

	.imgs{
		@extend %row;
	
		& + .imgs {
			margin-top: 3%;
		}

		.img{
			width: 30%;
			padding-bottom: 30%;
			border: 5px solid white;
			border-radius: 3px;
			box-shadow: 0 0 2px #ccc;
	
			@extend %left;
			@extend %relative;
			@extend %inline-block;
			@include bg(cover, $bg);

			& + .img{
				margin-left: 5%;
			}

			&:before{
				background: rgba(white, .9);
				border-radius: 0 0 5px 0;
				padding: 2px 10px;
				left: -1px;
				top: -1px;

				@extend %absolute;
				@extend %inline-block;
			}
		}

		@for $i from 1 through $total{
			$filter: nth($list, $i);
			$css: #{$filter + '(3)'};
			$svg: #{'#' + $filter};

			&.#{$filter} {
				.img{
					&:nth-child(2){
						@include filter($css);
					}
					&:nth-child(3){
						@include filter(url($svg));
					}
				}
			}
		}

		@include special('hue-rotate', hue-rotate(90deg));
		@include special('opacity', opacity(.2));
		@include special('blur', blur(3px));
		@include special('drop-shadow', drop-shadow(5px 5px 5px #000));

		&.hue-rotate{
			.img{
				&:nth-child(3){
					@include filter(#hueRotate)
				}
			}
		}

		&.drop-shadow{
			.img{
				border: none;
				box-shadow: none;

				&:nth-child(3){
					@include filter(#dropShadow)
				}
			}
		}
	}
}